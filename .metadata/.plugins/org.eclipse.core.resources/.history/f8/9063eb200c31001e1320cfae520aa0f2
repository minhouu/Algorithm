package sol1;

import java.util.Arrays;
import java.util.Scanner;

public class Main {
	static int[] arr = new int[100]; // 동전들 저장
	static int[][] memo = new int[100][10000]; // n, k쌍 저장
	static int IMPOSSIBLE = 100001;
	static int K;
	static int N;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		K = sc.nextInt();
		for (int i = 0; i < N; i++) {
			arr[i] = sc.nextInt();
		}
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < K; j++) {
				memo[i][j] = -1;
			}
		}
		int result = dp(0, K);
		if (result >= IMPOSSIBLE) {
			System.out.println(-1);
		} else {
			System.out.println(result);
		}

	}

	public static int dp(int n, int k) {
		if (n == N) {
			return (k == 0 ? 0 : IMPOSSIBLE);
		}
		if (memo[n][k] != -1) {
			return memo[n][k];
		}

		if (k < arr[n]) {
			return dp(n + 1, k);
		}
		return Math.min(dp(n + 1, k), dp(n, k - arr[n]) + 1);
	}

}
